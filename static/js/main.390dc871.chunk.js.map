{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.module.css","p2-homeworks/h5/Navbar.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h11/HW11.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h9/Clock.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h13/Request.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h10/HW10.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h13/requestAPI.ts","p2-homeworks/h13/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/AllRoutes.tsx","p2-homeworks/h5/Navbar.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","p2-homeworks/h10/bll/store.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","styles","post","src","avatar","alt","decorator","bubble","author","name","text","message","time","messageData","HW1","Affair","s","affair","priority","deleteButton","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","wrapper","affairsContainer","buttonsContainer","filterButton","disabled","filter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","container","inputContainer","value","onChange","errorMessage","GreetingContainer","users","addUserCallback","setName","setError","length","event","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","superInput","errorInput","e","key","SuperButton","red","colorTheme","useSelector","state","uiStyle","shapeConfig","controlsShape","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","spanStyle","defaultSpan","checkboxWrapper","checked","HW4","setText","showAlert","setChecked","column","testSpanError","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","style","display","Provider","cursor","marginLeft","paddingTop","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","slice","parse","x","y","HW6","setValue","contentWrapper","textFieldWrapper","undefined","buttonsWrapper","defaultValue","storedValue","setTimeout","PreJunior","SuperSelect","options","onChangeOption","combinedClassName","select","mappedOptions","item","index","SuperRadio","onChangeCallback","o","i","arr","HW7","homeWorkReducer","action","stateCopy","sort","item1","item2","toLowerCase","payload","reverse","user","age","initialPeople","HW8","people","setPeople","finalPeople","p","userLineWrapper","taskContent","usersTableWrapper","controlsWrapper","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","timeContainer","dateContainer","id","window","setInterval","HW9","initState","isLoading","setLoadingStatusAC","newLoadingStatus","HW10","min","max","loading","dispatch","useDispatch","processIndicatorClass","Math","floor","random","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","gap","getBarFillPercent","leftThumbPos","rightThumbPos","barFillLeftShift","round","barFillState","setBarFillState","leftThumbClassName","thumb","thumbZindex5","thumbZindex3","newLeftThumbPos","Number","newRightThumbValue","thumbZindex4","slider","sliderTrack","left","width","sliderRange","HW11","value1","setValue1","value2","setValue2","superRangeContainer","sliderValue","doubleRangeContainer","themes","HW12","theme","changeColorThemeC","Junior","instance","axios","create","baseURL","requestAPI","switchValue","success","Request","response","setResponse","checkboxValue","setCheckBoxValue","textField","then","res","catch","HW13","JuniorPlus","PATH","AllRoutes","path","element","Navbar","navbar","to","isActive","activeLink","defaultLink","navbarArrow","HW5","App","currentColorTheme","marginTop","Boolean","location","hostname","match","rootReducer","combineReducers","shape","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.390dc871.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__1YI3z\",\"affairsContainer\":\"Affairs_affairsContainer__G3D6H\",\"buttonsContainer\":\"Affairs_buttonsContainer__XxqqF\",\"affair\":\"Affairs_affair__2RFPo\",\"deleteButton\":\"Affairs_deleteButton__2ghoh\",\"filterButton\":\"Affairs_filterButton__Qx6ee\",\"high\":\"Affairs_high__PPtA7\",\"low\":\"Affairs_low__3wCpC\",\"middle\":\"Affairs_middle__16Xj-\",\"activeFilter\":\"Affairs_activeFilter__37YEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperDoubleRange_container__I9YKJ\",\"slider\":\"SuperDoubleRange_slider__3PRdn\",\"sliderTrack\":\"SuperDoubleRange_sliderTrack__365ri\",\"sliderRange\":\"SuperDoubleRange_sliderRange__eefvL\",\"sliderLeftValue\":\"SuperDoubleRange_sliderLeftValue__3Y5Al\",\"sliderRightValue\":\"SuperDoubleRange_sliderRightValue__E2afJ\",\"thumb\":\"SuperDoubleRange_thumb__32bkH\",\"thumbZindex3\":\"SuperDoubleRange_thumbZindex3__1K1Kg\",\"thumbZindex4\":\"SuperDoubleRange_thumbZindex4__3oh4Z\",\"thumbZindex5\":\"SuperDoubleRange_thumbZindex5__3MP9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__SLKP9\",\"defaultLink\":\"Navbar_defaultLink__27EHB\",\"activeLink\":\"Navbar_activeLink__3xIB_\",\"navbarArrow\":\"Navbar_navbarArrow__3V-Ua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__1TLwd\",\"avatar\":\"Message_avatar__1osZx\",\"bubble\":\"Message_bubble__10k6-\",\"decorator\":\"Message_decorator__302dy\",\"author\":\"Message_author__1Zi2i\",\"text\":\"Message_text__1OMXr\",\"time\":\"Message_time__2oxky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxWrapper\":\"SuperCheckbox_checkboxWrapper__2GH4p\",\"defaultSpan\":\"SuperCheckbox_defaultSpan__3jo-b\",\"elevatedSpan\":\"SuperCheckbox_elevatedSpan__1C-DS\",\"checkbox\":\"SuperCheckbox_checkbox__4clEa\",\"sliderCheckbox\":\"SuperCheckbox_sliderCheckbox__2n2ZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"doubleRangeContainer\":\"HW11_doubleRangeContainer__3NI90\",\"superRangeContainer\":\"HW11_superRangeContainer__2f_X4\",\"sliderValue\":\"HW11_sliderValue__vm17a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__n83du\",\"error\":\"Greeting_error__1HzZw\",\"errorMessage\":\"Greeting_errorMessage__1NAwE\",\"inputContainer\":\"Greeting_inputContainer__1enzp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1lB6R\",\"inputContainer\":\"SuperInputText_inputContainer__v1H3J\",\"superInput\":\"SuperInputText_superInput__eOjbT\",\"errorInput\":\"SuperInputText_errorInput__2Q-If\",\"error\":\"SuperInputText_error__3DbPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__xDSLZ\",\"redButton\":\"SuperButton_redButton__1h6Ev\",\"greenButton\":\"SuperButton_greenButton__1NUvm\",\"dark\":\"SuperButton_dark__2Cjbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskContent\":\"HW8_taskContent__QKz9a\",\"usersTableWrapper\":\"HW8_usersTableWrapper__16jbK\",\"userLineWrapper\":\"HW8_userLineWrapper__1RJjt\",\"controlsWrapper\":\"HW8_controlsWrapper__28Mcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__12j12\",\"column\":\"HW4_column__MCNR1\",\"testSpanError\":\"HW4_testSpanError__2MGYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"HW6_contentWrapper__2mw3-\",\"textFieldWrapper\":\"HW6_textFieldWrapper__1XSUm\",\"buttonsWrapper\":\"HW6_buttonsWrapper__2rvI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeContainer\":\"Clock_timeContainer__1Ig0k\",\"dateContainer\":\"Clock_dateContainer__4WC4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"App_default__3LQJF\",\"dark\":\"App_dark__10hTs\",\"lime\":\"App_lime__Ml27W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3NwRq\",\"dark\":\"SuperSelect_dark__2_Ims\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Request_container__1O1Mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__1QYYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dummy\":\"HW10_dummy__2PNWc\",\"dotsBars1\":\"HW10_dotsBars1__2jZaG\",\"db1\":\"HW10_db1__1D3LA\",\"dotsBars2\":\"HW10_dotsBars2__1dpJ5\",\"db2\":\"HW10_db2__2ykY8\",\"dotsBars3\":\"HW10_dotsBars3__1PYPI\",\"db3-1\":\"HW10_db3-1__1MhnO\",\"db3-2\":\"HW10_db3-2__1nB-o\",\"dotsBars4\":\"HW10_dotsBars4__3TIwR\",\"db4-0\":\"HW10_db4-0__1rz1S\",\"db4-1\":\"HW10_db4-1__2GqhO\",\"db4-2\":\"HW10_db4-2__x-ILm\",\"dotsBars5\":\"HW10_dotsBars5__1-QSi\",\"db5-1\":\"HW10_db5-1__PrtLD\",\"db5-2\":\"HW10_db5-2__IfMKJ\",\"dotsBars6\":\"HW10_dotsBars6__3_X-L\",\"db6-0\":\"HW10_db6-0__3GODh\",\"db6-1\":\"HW10_db6-1__1AP9g\",\"db6-2\":\"HW10_db6-2__29yts\",\"db6-3\":\"HW10_db6-3__3fTRj\",\"dotsBars7\":\"HW10_dotsBars7__16otz\",\"db7-0\":\"HW10_db7-0__1KrZ4\",\"db7-1\":\"HW10_db7-1__lhHmt\",\"dotsBars8\":\"HW10_dotsBars8__GExoz\",\"db8-0\":\"HW10_db8-0__182JY\",\"db8-1\":\"HW10_db8-1__3zG7N\",\"dotsBars9\":\"HW10_dotsBars9__1lTS5\",\"db9-0\":\"HW10_db9-0__pvpgz\",\"db9-1\":\"HW10_db9-1__Z8XMZ\",\"dotsBars10\":\"HW10_dotsBars10__osxk6\",\"db10-1\":\"HW10_db10-1__1ktdr\",\"db10-2\":\"HW10_db10-2__1KyPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__UHWfD\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport styles from './Message.module.css'\r\n\r\n\r\ntype propsMessageType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: propsMessageType) {\r\n    return (\r\n        <div className={styles.post}>\r\n\r\n            <img src={props.avatar} alt=\"avatar\" className={styles.avatar}/>\r\n            <div className={styles.decorator}></div>\r\n\r\n\r\n            <div className={styles.bubble}>\r\n                <div>\r\n                    <div className={styles.author}>{props.name}</div>\r\n                    <div className={styles.text}>{props.message}</div>\r\n                </div>\r\n                <div className={styles.time}>{props.time}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Captain America',\r\n    message: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt \r\n    ut `,\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homework 1</h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (affairID: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n    // let priorityClass = props.affair.priority === 'low' ? s.low: props.affair.priority === 'middle' ? s.middle : s.high;\r\n    return (\r\n        <div className={s.affair}>\r\n            <span>{props.affair.name}</span>\r\n            {/*<span className={priorityClass}>({props.affair.priority})</span>*/}\r\n            <span className={s[props.affair.priority]}>({props.affair.priority})</span>\r\n            <button className={s.deleteButton} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n\r\n// ${props.affair.priority}\r\n// s.low\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (affairID: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.affairsContainer}>\r\n                {mappedAffairs}\r\n            </div>\r\n\r\n            <div className={s.buttonsContainer}>\r\n                {/*<button className={props.filter === 'all' ? s.activeFilter : ''} onClick={setAll}>All</button>*/}\r\n                {/*<button className={props.filter === 'high' ? s.activeFilter : ''}onClick={setHigh}>High</button>*/}\r\n                {/*<button className={props.filter === 'middle' ? s.activeFilter : ''}onClick={setMiddle}>Middle</button>*/}\r\n                {/*<button className={props.filter === 'low' ? s.activeFilter : ''}onClick={setLow}>Low</button>*/}\r\n                <button className={s.filterButton} disabled={props.filter === 'all'} onClick={setAll}>All</button>\r\n                <button className={s.filterButton} disabled={props.filter === 'high'} onClick={setHigh}>High</button>\r\n                <button className={s.filterButton} disabled={props.filter === 'middle'} onClick={setMiddle}>Middle</button>\r\n                <button className={s.filterButton} disabled={props.filter === 'low'} onClick={setLow}>Low</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\n\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(affair=>affair.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(affair => affair._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homework 2</h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                filter={filter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (event: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '' // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div>Users total: {totalUsers}</div>\r\n            <div className={s.inputContainer}>\r\n                <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n                {/*<SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>*/}\r\n                <button onClick={addUser}>add</button>\r\n            </div>\r\n\r\n            <span className={s.errorMessage}>{error}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (event: React.ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setName(event.currentTarget.value) // просто связь input и name\r\n        setError('') // если начали набирать текст - ошибка исчезает\r\n\r\n    }\r\n    const addUser = () => {\r\n        if(name.trim()){\r\n            alert(`Hello ${name}!`) // need to fix\r\n            addUserCallback(name)\r\n        } else{\r\n            setError('The name field is empty!')\r\n        }\r\n        setName('') //зачистить input в любом случае\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n\r\n            const newUser = {_id: v1(), name: name}\r\n            setUsers([newUser, ...users]) // need to fix\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homework 3</h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${spanClassName ? spanClassName : ''} ${s.error}` //span будет отрисован только если в пропсах придет ошибка,\r\n    // если в пропсах придет доп класс для span, он добавится. Порядок в строке выше не влияет - если в пропсах синий текст, то он синий на странице\r\n    const finalInputClassName = `${s.input} ${onEnter ? s.superInput : ''} ${error ? s.errorInput : ''} ${className}` //может отрисовываться как обычный инпут так и superInput,\r\n    // класс для superInput нужно добавлять только, если в пропсах приходит что-то относящееся к superInput (onChangeText, onEnter...), error не подойдет - может\r\n    // иметь falsy значение. Из HW может приходить дполнительный класс? \"проверить работает ли смешивание классов\" s.blue -\r\n    // приходит из HW4.module.css и добавляет подчеркивание синим\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../h10/bll/store\";\r\nimport {ColorThemesListType, ShapesListType} from \"../../../h12/bll/themeReducer\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const colorTheme = useSelector<AppStoreType, ColorThemesListType>(\r\n        state => state.uiStyle.colorTheme);\r\n\r\n    const shapeConfig = useSelector<AppStoreType, ShapesListType>(\r\n        state => state.uiStyle.controlsShape);\r\n\r\n    // const finalClassName = `${red ? s.red : s.default} ${className}` //или по умолчанию или стиль \"красный\" плюс стиль из пропсов\r\n    const finalClassName = `${s.default} ${className ? s[className] : '' } ${s[colorTheme]} ${s[shapeConfig]}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeChecked // если есть пропс onChange\r\n        && onChangeChecked(e.currentTarget.checked) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${className ? s[className] : s.checkbox}`\r\n    const spanStyle = spanClassName ? s[spanClassName] : s.defaultSpan\r\n\r\n    return (\r\n        <label className={`${s.checkboxWrapper}`}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={spanStyle}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут. Если приходит какое-то содержимое (children), то рисуется спан с этим содержимым\r\n        // In JSX expressions that contain both an opening tag and a closing tag, the content between those tags is passed as a special prop: props.children\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homework 4</h3>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton className={'greenButton'}>\r\n                    I am a green button\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={'redButton'}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    className={'sliderCheckbox'}\r\n                    spanClassName={'elevatedSpan'}\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    I am a child of SuperCheckbox {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                {/*In JSX expressions that contain both an opening tag and a closing tag, the content between those tags is passed as a special prop: props.children*/}\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChange={testOnChange}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\nimport {FaRegEdit} from \"react-icons/all\";\r\nimport {IconContext} from \"react-icons\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${s.editableSpan} ${className}`\r\n    const spanClassName = `${s.editableSpan}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        <span style={{display:'inline-block'}}>{children || restProps.value}</span>\r\n\r\n\r\n                        <IconContext.Provider value={{ style: { cursor: 'pointer', marginLeft: '10px', paddingTop:'4px' } }}>\r\n                                 <FaRegEdit onClick={()=>setEditMode(true)}/>\r\n                        </IconContext.Provider>\r\n\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state) //добаляет лишие кавычки\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null){\r\n        debugger\r\n        let cleanString = stateAsString.slice(1, stateAsString.length - 2).trim() //избавляюсь от лишних кавычек, чтобы работал trim()\r\n        if(cleanString) {\r\n            state = JSON.parse(stateAsString) as T\r\n        }\r\n\r\n    }\r\n\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\nimport s from './HW6.module.css'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let defaultValue = 'nothing to restore'\r\n        let storedValue = restoreState<string>('editable-span-value', defaultValue)\r\n        setValue(storedValue)\r\n        if (storedValue === defaultValue) setTimeout(()=>setValue(''), 1000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>homework 6</h3>\r\n<div className={s.contentWrapper}>\r\n    {/*should work (должно работать)*/}\r\n    <div className={s.textFieldWrapper}>\r\n        {/*<FaRegEdit />*/}\r\n        <SuperEditableSpan\r\n            value={value}\r\n            onChangeText={setValue}\r\n            spanProps={{children: value ? undefined : 'enter text...'}}\r\n        />\r\n    </div>\r\n    <div className={s.buttonsWrapper}>\r\n        <SuperButton onClick={save}>save</SuperButton>\r\n        <SuperButton onClick={restore}>restore</SuperButton>\r\n    </div>\r\n\r\n\r\n    {/*<hr/>*/}\r\n    {/*/!*для личного творчества, могу проверить*!/*/}\r\n    {/*/!*<AlternativeSuperEditableSpan/>*!/*/}\r\n    {/*<hr/>*/}\r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nexport function PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../h10/bll/store\";\r\nimport {ColorThemesListType} from \"../../../h12/bll/themeReducer\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption, value,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const colorTheme = useSelector<AppStoreType, ColorThemesListType>(state => state.uiStyle.colorTheme)\r\n    const combinedClassName = `${s.select} ${s[colorTheme]}`\r\n\r\n    const mappedOptions: any[] = options ? options.map((item, index) =>\r\n            <option\r\n                key={index}\r\n                value={item}\r\n            >\r\n                {item}\r\n            </option>)\r\n        : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={combinedClassName} value={value} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n// The radio group must have share the same name (the value of the name attribute) to be treated as a group\r\n// Once the radio group is created, selecting any radio button in that group automatically\r\n// deselects any other selected radio button in the same group.\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                name={name}\r\n                // checked={value===o} установит чекнутым один из элементов при загрузке страницы. В родительской компоненте задано arr[1], т.е. 'y'\r\n                value={o}\r\n                checked={value===o}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>\r\n                homework 7\r\n            </h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from \"../HW8\";\r\n\r\n\r\n// const initialPeople = [\r\n//     {_id: 0, name: 'Кот', age: 3},\r\n//     {_id: 1, name: 'Александр', age: 66},\r\n//     {_id: 2, name: 'Коля', age: 16},\r\n//     {_id: 3, name: 'Виктор', age: 44},\r\n//     {_id: 4, name: 'Дмитрий', age: 40},\r\n//     {_id: 5, name: 'Ирина', age: 55},\r\n// ]\r\n\r\nexport const homeWorkReducer = (state: Array<UserType>, action: UsersActionsGeneralType): Array<UserType> => { // need to fix any\r\n    switch (action.type) {\r\n        // case 'sort': {\r\n        //     let stateCopy = [...state]\r\n        //     return action.payload === 'up' ? stateCopy.sort((a, b) => b.age - a.age)\r\n        //         : stateCopy.sort((a, b) => a.age - b.age)\r\n        // }\r\n\r\n        case 'sort': {\r\n            let stateCopy = [...state]\r\n            const sortByName = (item1:UserType, item2:UserType) =>{\r\n                let x = item1.name.toLowerCase();\r\n                let y = item2.name.toLowerCase();\r\n                if (x < y) {\r\n                    return -1;\r\n                }\r\n                if (x > y) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n            stateCopy.sort(sortByName)\r\n\r\n            return action.payload === 'up' ? stateCopy : stateCopy.reverse()\r\n        }\r\n        case 'check': {\r\n            return state.filter(user => user.age >= action.payload)\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype UsersActionsGeneralType = SortUsersActionType | CheckUsersActionType\r\n\r\ntype SortUsersActionType = {\r\n    type: 'sort'\r\n    payload: 'up' | 'down'\r\n}\r\n\r\ntype CheckUsersActionType = {\r\n    type: 'check'\r\n    payload: number\r\n}","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from './HW8.module.css'\r\n// import {UserType} from \"../h3/HW3\";\r\n\r\nexport type UserType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: any) => (\r\n        <div key={p._id}\r\n        className={s.userLineWrapper}>\r\n            <span>{p.name}</span>\r\n            <span>{p.age}</span>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'down'}))\r\n    const check = (age:number) => setPeople(homeWorkReducer(initialPeople, {type: 'check', payload: age}))\r\n\r\n    return (\r\n        <div className={s.taskContent}>\r\n            <hr/>\r\n            <h3>homework 8</h3>\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.usersTableWrapper}>\r\n                {finalPeople}\r\n            </div>\r\n            <div className={s.controlsWrapper}>\r\n                <SuperButton onClick={sortUp}>sort up</SuperButton>\r\n                <SuperButton onClick={sortDown}>sort down</SuperButton>\r\n                <SuperButton onClick={()=>check(18)}>check 18</SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from './Clock.module.css'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = date?.toLocaleTimeString() // fix with date\r\n    const stringDate = date?.toLocaleDateString() // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n                className={s.timeContainer}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show ? (\r\n                <div className={s.dateContainer}>\r\n                    {stringDate}\r\n                </div>\r\n            ) : <div className={s.dateContainer}></div>\r\n            }\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>\r\n                homework 9\r\n            </h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","export type LoadingStateType = {\r\n    isLoading: boolean\r\n}\r\n\r\nconst initState: LoadingStateType = {\r\n    isLoading: false\r\n}\r\n\r\nexport const loadingReducer = (state = initState, action: SetLoadingStatusActionType): LoadingStateType => { // fix any\r\n    switch (action.type) {\r\n        case 'SET-LOADING-STATUS': {\r\n            let stateCopy = {...state}\r\n            stateCopy.isLoading = action.payload.isLoading\r\n            return stateCopy\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\ntype SetLoadingStatusActionType = {\r\n    type:'SET-LOADING-STATUS'\r\n    payload:{\r\n        isLoading: boolean\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setLoadingStatusAC = (newLoadingStatus: boolean): SetLoadingStatusActionType => {\r\n    return {\r\n        type: 'SET-LOADING-STATUS',\r\n        payload: {\r\n            isLoading: newLoadingStatus,\r\n        }\r\n    } as const\r\n}\r\n\r\n\r\n// fix any","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport s from './HW10.module.css'\r\nimport './HW10.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"./bll/store\";\r\nimport {setLoadingStatusAC} from \"./bll/loadingReducer\";\r\n\r\nfunction HW10() {\r\n    debugger\r\n    // useSelector, useDispatch\r\n    const loading = useSelector<AppStoreType, boolean>(state => state.loading.isLoading) //state для редюсера надо всегда делать объектом?\r\n    const dispatch = useDispatch()\r\n\r\n    const setLoading = () => {\r\n        dispatch(setLoadingStatusAC(true))\r\n        setTimeout(()=>{\r\n            dispatch(setLoadingStatusAC(false))\r\n        },10000)\r\n        console.log('loading...')\r\n    };\r\n\r\n    debugger\r\n\r\n    const random = (min: number, max:number) => Math.floor(Math.random() * (max - min)) + min;\r\n    let processIndicatorClass = `dotsBars${random(1, 11)}`\r\n    // let processIndicatorClass = `dots-bars-${random(1, 11)}`\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>\r\n                homework 10\r\n            </h3>\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div className={s[processIndicatorClass]}></div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                max={restProps.max}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React, {useState} from 'react'\r\nimport styles from \"./SuperDoubleRange.module.css\"\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value: [number, number]\r\n    gap: number\r\n    max: number\r\n    min: number\r\n\r\n\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        min, max, gap,\r\n        ...restProps\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    const getBarFillPercent = (leftThumbPos: number, rightThumbPos: number) => {\r\n        const barFillLeftShift = Math.round(((leftThumbPos - min) / (max - min)) * 100)\r\n        const barFillWidth = Math.round(((rightThumbPos - min) / (max - min)) * 100) - barFillLeftShift\r\n        return [barFillLeftShift, barFillWidth]\r\n    }\r\n\r\n    const [barFillState, setBarFillState] = useState(getBarFillPercent(value[0], value[1]))\r\n\r\n    //make sure minVal does not exceed maxVal\r\n    const leftThumbMoveHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newLeftThumbPos = Number(event.currentTarget.value)\r\n        if (newLeftThumbPos < value[1] - gap) {\r\n            onChangeRange && onChangeRange([newLeftThumbPos, value[1]])\r\n            setBarFillState(getBarFillPercent(newLeftThumbPos, value[1]))\r\n        }\r\n        return\r\n    }\r\n\r\n    //make sure maxVal does not fall below minVal\r\n    const rightThumbMoveHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newRightThumbValue = Number(event.currentTarget.value)\r\n        if (newRightThumbValue > value[0] + gap) {\r\n            onChangeRange && onChangeRange([value[0], newRightThumbValue])\r\n            setBarFillState(getBarFillPercent(value[0], newRightThumbValue))\r\n        }\r\n        return\r\n    }\r\n\r\n    //fix for left thumb unable to move when both thumbs pressed to the right (right thumb is above by default)\r\n    const leftThumbClassName = value[0] > max - 100 ? `${styles.thumb} ${styles.thumbZindex5}`\r\n        : `${styles.thumb} ${styles.thumbZindex3}`\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={value[0]}\r\n                onChange={leftThumbMoveHandler}\r\n                className={leftThumbClassName}\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min={min}\r\n                max={max}\r\n                value={value[1]}\r\n                onChange={rightThumbMoveHandler}\r\n                className={`${styles.thumb} ${styles.thumbZindex4}`}\r\n            />\r\n            <div className={styles.slider}>\r\n                <div className={styles.sliderTrack}/>\r\n                <div style={{left: `${barFillState[0]}%`, width: `${barFillState[1]}%`}}\r\n                     className={styles.sliderRange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\nimport s from './HW11.module.css'\r\n\r\nfunction HW11() {\r\n    const MIN_VALUE = 0\r\n    const MAX_VALUE = 500\r\n    const GAP = 48\r\n    const [value1, setValue1] = useState(10)\r\n    const [value2, setValue2] = useState(70)\r\n\r\n\r\n\r\n    const doubleRangeChangeHandler = (value: [number, number]) => {\r\n        setValue1(value[0])\r\n        setValue2(value[1])\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>\r\n                homework 11\r\n            </h3>\r\n\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div className={s.superRangeContainer}>\r\n                <span className={s.sliderValue}>{value1}</span>\r\n                <SuperRange\r\n                    max={MAX_VALUE}\r\n                    onChangeRange={setValue1}\r\n                    value={value1}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.doubleRangeContainer}>\r\n                <span className={s.sliderValue}>{value1}</span>\r\n                <SuperDoubleRange\r\n                    value={[value1, value2]}\r\n                    max={MAX_VALUE}\r\n                    min={MIN_VALUE}\r\n                    gap={GAP}\r\n                    onChangeRange={doubleRangeChangeHandler}\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span className={s.sliderValue}>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","export type ColorThemesListType = 'default' | 'dark' | 'lime';\r\nexport type ShapesListType = 'default' | 'rounded' | 'rectangular';\r\n\r\nconst initState = {\r\n    colorTheme: 'default' as ColorThemesListType,\r\n    controlsShape: 'smooth' as ShapesListType,\r\n};\r\n\r\ntype themeReducerStateType = typeof initState;\r\n\r\nexport const themeReducer = (state: themeReducerStateType = initState, action: themeReducerActionsType): themeReducerStateType => { // fix any\r\n    switch (action.type) {\r\n        case \"CHANGE-THEME\":\r\n            return {...state, colorTheme: action.theme};\r\n        case \"CHANGE-CONTROLS-SHAPE\":\r\n            return {...state, controlsShape: action.shape};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// export const changeThemeC = (): any => {}; // fix any\r\n\r\ntype themeReducerActionsType = ReturnType<typeof changeColorThemeC> | ReturnType<typeof changeControlsShapeC>;\r\n\r\n\r\nexport const changeColorThemeC = (theme: ColorThemesListType) => {\r\n    return {\r\n        type: 'CHANGE-THEME',\r\n        theme,\r\n    } as const\r\n};\r\n\r\nexport const changeControlsShapeC = (shape: ShapesListType) => {\r\n    return {\r\n        type: 'CHANGE-CONTROLS-SHAPE',\r\n        shape,\r\n    } as const\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../h10/bll/store\";\r\nimport {changeColorThemeC, ColorThemesListType} from \"./bll/themeReducer\";\r\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\r\n\r\nconst themes = ['default', 'dark', 'lime'];\r\n\r\nfunction HW12() {\r\n    const theme = useSelector<AppStoreType, ColorThemesListType>(\r\n        state => state.uiStyle.colorTheme);\r\nconst dispatch = useDispatch();\r\n    // useDispatch, onChangeCallback\r\n    const handleThemeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(changeColorThemeC(event.currentTarget.value as ColorThemesListType))\r\n    };\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <h3>homework 12</h3>\r\n            <div className={s[theme + '-text']}>\r\n                <SuperSelect options={themes} value={theme} onChange={handleThemeChange}/>\r\n            </div>\r\n\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport HW10 from \"../../h10/HW10\";\r\nimport HW11 from \"../../h11/HW11\";\r\nimport HW12 from \"../../h12/HW12\";\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-cafe-back.herokuapp.com/',\r\n})\r\n\r\nexport const requestAPI = {\r\n    makePostRequest (switchValue: boolean) {\r\n        return instance.post('auth/test', {success: switchValue})\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport SuperCheckbox from \"../h4/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from './Request.module.css'\r\nimport {requestAPI} from \"./requestAPI\";\r\n\r\nconst Request = () => {\r\n    const[response, setResponse] = useState('')\r\n    const [checkboxValue, setCheckBoxValue] = useState(true)\r\n\r\n\r\n    const sendPostRequest = () => {\r\n        requestAPI.makePostRequest(checkboxValue)\r\n            .then(res => setResponse(JSON.stringify(res.data)))\r\n            .catch(error => setResponse(error))\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <textarea className={s.textField} value={response}/>\r\n            <SuperCheckbox\r\n                onChangeChecked={setCheckBoxValue}\r\n                checked={checkboxValue}\r\n                className={'sliderCheckbox'}\r\n                spanClassName={'elevatedSpan'}\r\n            >\r\n                switch it\r\n            </SuperCheckbox>\r\n            <SuperButton\r\n                onClick={sendPostRequest}\r\n                className={'greenButton'}> make request\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Request;","import React from 'react';\r\nimport Request from \"./Request\";\r\n\r\nconst HW13 = () => {\r\n    return (\r\n        <div>\r\n            <h3>\r\n                homework 13\r\n            </h3>\r\n            <Request/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HW13;","import React from 'react'\r\nimport HW13 from \"../../h13/HW13\";\r\n\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n        <HW13/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Error404 from \"./pages/Error404\";\r\nimport {PreJunior} from \"./pages/PreJunior\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior+'\r\n}\r\n\r\nexport function AllRoutes() {\r\n    return (\r\n        <div>\r\n            {/*Switch deprecated <Routes> is the new <Switch>*/}\r\n            <Routes>\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact был нужен чтоб указать полное совпадение (что после '/' ничего не будет) - теперь это поведение по умолчанию*/}\r\n                {/*Any component whose pathname is a backslash will get rendered first whenever the app loads for the first time*/}\r\n                <Route path={'/'} element={<PreJunior/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./AllRoutes\";\r\n\r\nfunction Navbar() {\r\n    // you can use useNavigate to push users to various pages\r\n\r\n    // const navigate = useNavigate()\r\n    // navigate(PATH.PRE_JUNIOR)\r\n\r\n    return (\r\n            <div className={s.navbar}>\r\n                <NavLink to={PATH.PRE_JUNIOR} className={({isActive}) => isActive ? s.activeLink : s.defaultLink}>pre-junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR} className={({isActive}) => isActive ? s.activeLink : s.defaultLink}>junior</NavLink>\r\n                <NavLink to={PATH.JUNIOR_PLUS} className={({isActive}) => isActive ? s.activeLink : s.defaultLink}>junior+</NavLink>\r\n                <div className={s.navbarArrow}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from './Navbar'\r\nimport {AllRoutes} from './AllRoutes'\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n            <Navbar/>\r\n            <AllRoutes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../p2-homeworks/h10/bll/store\";\r\nimport {ColorThemesListType} from \"../../../p2-homeworks/h12/bll/themeReducer\";\r\n\r\nfunction App() {\r\n    const currentColorTheme = useSelector<AppStoreType, ColorThemesListType>(state =>\r\n        state.uiStyle.colorTheme)\r\n    return (\r\n        <div className={`${s.default} ${s[currentColorTheme]}`}>\r\n            <h1 style={{marginTop: 0}}>react homeworks:</h1>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import {loadingReducer} from './loadingReducer'\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {themeReducer} from \"../../h12/bll/themeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    loading: loadingReducer,\r\n    uiStyle: themeReducer,\r\n\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\n//\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n//\r\n// // @ts-ignore\r\n// window.store = store // for dev\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./p2-homeworks/h10/bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}